version: '3.7'
services:
  frontend:
    container_name: frontend
    image: torxebec/frontend:0.0.1
    build:
      context: .
      dockerfile: frontend/Dockerfile
    networks:
      - torxebec_network
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    tty: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8020:80
    networks:
      - torxebec_network
    depends_on:
      - frontend
      - backend
  redis:
    image: redis
    ports:
      - 6378:6379
    networks:
      - torxebec_network
  postgres:
    image: postgres:12.3-alpine
    restart: always
    volumes:
      - torxebec_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: "torxebec"
      POSTGRES_PASSWORD: "12345"
    ports:
      - 5434:5432
    networks:
      - torxebec_network
  worker:
    build:
      context: backend
      dockerfile: Dockerfile
    command: celery --app app.tasks worker --loglevel=DEBUG -Q main-queue -c 1
    networks:
      - torxebec_network
  flower:
    image: mher/flower
    command: celery flower --broker=redis://redis:6379/0 --port=5555
    ports:
      - 5555:5555
    depends_on:
      - "redis"
    networks:
      - torxebec_network
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
    depends_on:
      - postgres
    networks:
      - torxebec_network
    env_file:
      - .env

volumes:
  torxebec_data:

networks:
  torxebec_network:
    driver: bridge